@value homeColor, moonlightColor, bumpsColor, blogColor from '../global/colors.css';
@value easeInCubic, easeOutCubic, easeInSine, easeOutSine from '../global/animations.css';
@value headerMargin from './header.css';

.page
{
    display: flex;
    flex-direction: column;
    align-content: center;

    min-height: calc(100% - 4 * headerMargin);
    padding-top: calc(2 * headerMargin);
    padding-bottom: calc(2 * headerMargin);
}

@value contentGridHorizontalPadding: 6vw;
.contentGrid
{
    display: grid;
    grid-template-rows: auto auto 1fr;
    grid-template-columns: 1fr auto 1fr;
    
    width: 100%;
    margin: auto;
}

.mainContentFlex
{
    grid-row: 1 / 2;
    grid-column: 2 / 3;

    display: flex;
    flex-wrap: wrap;
    justify-content: center;

    padding-left: contentGridHorizontalPadding;
    padding-right: contentGridHorizontalPadding;
}

/* 
 * breakpoint is the viewport height at which its size is clamped and no longer responsive
 * logoMinEdgeLength(px) / logoEdgeLength(vh) = logoMinViewportHeightBreakpoint(px)
 */
@value logoMinViewportHeightBreakpoint: 667px;
@value logoMinEdgeLength: 180px;
@value logoEdgeLength: 27vh;
@value logoGap: 0.5vh;
.logoBox
{
    width: logoEdgeLength;
    height: logoEdgeLength;

    min-width: logoMinEdgeLength;
    min-height: logoMinEdgeLength;

    /* this padding enforces a gap between flex items - namely the links grid and this logo */
    padding: logoGap;
    
    background-clip: content-box;
    background-color: homeColor;
}

.logoBoxInTransition
{
    opacity: 0;
    clip-path: polygon(-100% 0%, 0% 0%, -100% 100%, -200% 100%);
    transition: opacity 0.65s easeOutCubic 0s, clip-path 0.65s easeOutCubic 0s;
}

.logoBoxIn
{
    opacity: 1;
    clip-path: polygon(-100% 0%, 200% 0%, 100% 100%, -200% 100%);
}

.logoBoxOutTransition
{
    opacity: 1;
    clip-path: polygon(-100% 0%, 200% 0%, 100% 100%, -200% 100%);
    transition: opacity 0.65s easeInCubic 0s, clip-path 0.65s easeInCubic 0s;
}

.logoBoxOut
{
    opacity: 0;
    clip-path: polygon(-100% 0%, 0% 0%, -100% 100%, -200% 100%);
}

.logo
{
    stroke: white;
    stroke-width: 5%;
    stroke-dasharray: 866px;
}

.logoInTransition
{
    stroke-dashoffset: 866px;
    transition: stroke-dashoffset 0.65s easeOutSine 0s;
}

.logoIn
{
    stroke-dashoffset: 0px;
}

.logoOutTransition
{
    stroke-dashoffset: 0px;
    transition: stroke-dashoffset 0.65s easeInSine 0s;
}

.logoOut
{
    stroke-dashoffset: 866px;
}

@value mainLinksRowGap: 1px;
@value mainLinksMinRowHeight: calc(logoMinEdgeLength / 3 - mainLinksRowGap);
@value mainLinksRowHeight: calc(logoEdgeLength / 3 - mainLinksRowGap);
.mainLinksGrid
{
    display: grid;
    grid-auto-rows: minmax(mainLinksMinRowHeight, mainLinksRowHeight);
    grid-template-columns: minmax(logoMinEdgeLength, logoEdgeLength);
    grid-row-gap: mainLinksRowGap;

    /* this padding enforces a gap between flex items - namely the logo and this grid */
    padding: logoGap;
}

.mainLink
{
    width: 100%;
    height: 100%;
}

.externalLinksFlex
{
    grid-row: 2 / 3;
    grid-column: 2 / 3;

    display: flex;
    justify-content: center;

    margin-top: 5%;
    margin-left: contentGridHorizontalPadding;
    margin-right: contentGridHorizontalPadding;
}

.externalLink
{
    width: 7vh;
    min-width: 45px;
    margin-left: 6%;
    margin-right: 6%;
}

.buttonsInTransition
{
    opacity: 0;
    transition: opacity 0.65s easeOutCubic 0.2s;
}

.buttonsIn
{
    opacity: 1;
}

.buttonsOutTransition
{
    opacity: 1;
    transition: opacity 0.65s easeInCubic 0s;
}

.buttonsOut
{
    opacity: 0;
}

.moonlightColor
{
    background-color: moonlightColor;
}

.bumpsColor
{
    background-color: bumpsColor;
}

.blogColor
{
    background-color: blogColor;
}

.footer
{
    grid-area: footer;

    align-self: center;
    justify-content: flex-end;
    text-align: center;

    width: auto;
    margin: 2em 2em 0em 2em;


    font-family: 'M+P1-Thin';
    font-size: responsive 10px 14px;
    font-range: 215px 1280px;
    color: white;
    text-shadow: 0 0 10px black;
}

.footerInTransition
{
    opacity: 0;
    transform: translateY(3em);
    transition: opacity 0.65s easeOutCubic 0.35s, transform 0.65s easeOutCubic 0s;
}

.footerIn
{
    opacity: 0.5;
    transform: translateY(0);
}

.footerOutTransition
{
    opacity: 0.5;
    transition: opacity 0.65s easeInCubic 0s;
}

.footerOut
{
    opacity: 0;
}

.footerLink
{
    color: white;
}

@media (max-height: logoMinViewportHeightBreakpoint)
{
    .logoBox
    {
        /* logoMinViewportHeightBreakpoint(px) / logoGap(vh%) */
        padding: 3px;
    }

    .mainLinksGrid
    {
        /* logoMinViewportHeightBreakpoint(px) / logoGap(vh%) */
        padding: 3px;
    }
}