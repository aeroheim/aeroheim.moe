@value homeColor from '../global/colors.css';
@value smheight from '../global/breakpoints.css';

.page
{
    display: grid;
    position: fixed;

    grid-template-rows: auto 1fr auto;
    /*
     need to set column min-width is based on child content which can cause can cause the column
     to expand past 1fr. to fix this the column's min-width needs to be set to 0.
     see https://stackoverflow.com/questions/43311943/prevent-content-from-expanding-grid-items.
    */
    grid-template-columns: minmax(0, 1fr);
    grid-template-areas: "header"
                         "content"
                         "footer";

    width: 100%;
    height: 100%;

    composes: fadeIn from "../global/animations.css";
    animation-duration: 1s;

    overflow-x: hidden;
    overflow-y: auto;
    overflow-y: overlay;

    background-image: url(../../img/bg.jpg);
    background-color: rgba(0, 0, 0, 0.2);
    background-blend-mode: multiply;
    background-size: cover;
    background-position: center bottom;
}

.page::-webkit-scrollbar
{
    /* TODO: make width responsive */
    width: 6px;
    background-color: rgba(0, 0, 0, 0.4);
}

.page::-webkit-scrollbar-thumb
{
    background-color: homeColor;
}

.header
{
    grid-area: header;
}

.content
{
    grid-area: content;
}

@value spinnerWidth: 10vh;
.spinner
{
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    width: spinnerWidth;
}

.footer
{
    grid-area: footer;
}

@media (max-height: smheight)
{
    .spinner
    {
        /* smheight(px) * spinnerWidth(vh%) */
        width: 66.7px;
    }
}